[{"id":"d435135c.d70748","type":"tab","label":"Flow 1"},{"id":"95afb40b.aead58","type":"influxdb","z":"","hostname":"bd","port":"8086","protocol":"http","database":"power","name":"","usetls":false,"tls":""},{"id":"e18aad64.bc28f8","type":"influxdb out","z":"d435135c.d70748","influxdb":"95afb40b.aead58","name":"","measurement":"powerval","x":899,"y":2395,"wires":[]},{"id":"3f28f039.f79a4","type":"inject","z":"d435135c.d70748","name":"manualTestStarter","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":138,"y":2675,"wires":[["3478309d.a573e"]]},{"id":"3478309d.a573e","type":"function","z":"d435135c.d70748","name":"manualTestUdpMock","func":"node.warn(\"Manual test Udp message mock - Start\");\nlet content = [];\nfor (let i = 0; i < 4000; i++){\n    content.push({\n        numValue:-2.1+(i%100)/25,\n        time:1489425057660000000+1000*i,\n        device:'captT',\n        region:'fr-lyo'\n    });\n}\nnode.warn(\"Manual test Udp message mock - Stop\");\nreturn { payload: content };","outputs":1,"noerr":0,"x":400,"y":2585,"wires":[["b990172.4849d68"]]},{"id":"d5f34874.7f034","type":"udp in","z":"d435135c.d70748","name":"","iface":"","port":"8123","ipv":"udp4","multicast":"false","group":"","datatype":"buffer","x":111,"y":2403,"wires":[["c137021c.097f8","b990172.4849d68"]]},{"id":"c137021c.097f8","type":"debug","z":"d435135c.d70748","name":"","active":true,"console":"false","complete":"false","x":414,"y":2341,"wires":[]},{"id":"b990172.4849d68","type":"function","z":"d435135c.d70748","name":"FormatInfluxdb","func":"if (!msg || !msg.payload) {\n    node.warn(\"Empty payload\");\n    return null;\n}\n\n//One item formating function\nconst formatOneItem = function( info ) {\n    if (!info.numValue || !info.time) {\n        node.warn(\"Incomplete item  \"+JSON.stringify(info));\n        return null;\n    }\n    let deviceId = !info.device ? 'captxx' : info.device;\n    let region = !info.region ? 'fr-xx' : info.region;\n    let item = [];\n    item.push({\n        numValue:info.numValue,\n        time:info.time\n    });\n    item.push({\n        device:deviceId,\n        region:region\n    });\n        //node.warn(\"Item : \"+JSON.stringify(item));\n    return item;\n};\n\nconst sentInfo = msg.payload;\nif (Array.isArray(sentInfo)) {\n    let arrayReturned = [];\n    for (let i = 0; i < sentInfo.length; i++){\n        const oneItem = formatOneItem(sentInfo[i]);\n        if (oneItem !== null) {\n            arrayReturned.push(oneItem);\n        }\n    }\n    return {payload : arrayReturned};\n} else {\n    return formatOneItem(sentInfo);\n}\nreturn null;","outputs":1,"noerr":0,"x":653,"y":2491,"wires":[["e18aad64.bc28f8","a670ed1d.38dfa"]]},{"id":"a670ed1d.38dfa","type":"debug","z":"d435135c.d70748","name":"","active":true,"console":"false","complete":"false","x":864,"y":2603,"wires":[]}]